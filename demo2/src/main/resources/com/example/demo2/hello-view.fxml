<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.geometry.Insets?>
<?import javafx.scene.control.Label?>
<?import javafx.scene.layout.VBox?>

<?import javafx.scene.control.Button?>
<?import javafx.scene.layout.HBox?>
<?import javafx.scene.control.TextField?>
<VBox alignment="CENTER" spacing="20.0" xmlns:fx="http://javafx.com/fxml"
      fx:controller="com.example.demo2.HelloController">
    <padding>
        <Insets bottom="20.0" left="20.0" right="20.0" top="20.0"/>
    </padding>

    <!--
    Now Adding our custom elements to be rendered on the stage window:
    Using <HBox> fxml element => Horizontal Box

    We can set the styles for this box using the "fxml attributes" like:
    - alignment
    - spacing

    You can think about VBox/HBox like using div element in HTML :-)
    -->
    <HBox alignment="CENTER" spacing="12">
        <!--
        This label has a predefined text inside it that should be always visible:
        no need to give it an id attribute as we will not target it in our controller
        -->
        <Label text="Course Title:"/>
        <!--
        Adding a text field to the right side of the label:

        NOTE: the TextField class has to be imported also:
        <?import javafx.scene.control.TextField?>

        or using the * for importing all the controls:
        <?import javafx.scene.control.*?>

        give it an id of "txtCourse" => the text field for the label Name
        as we will use this id value to target this node as we do with JS DOM :-)
        -->
        <TextField fx:id="txtCourse"/>
    </HBox>

    <Label fx:id="welcomeText"/>
    <Button text="Hello!" onAction="#onHelloButtonClick"/>

    <!--
    Adding our other custom code below:
    This <label /> element will be targeted by the controller based on its id "lblCourse"
    to display the user input that we will receive from the text field
    -->
    <Label fx:id="lblCourse"/>
    <!--
    When this "Course" button is clicked,
    OnCourseButtonClick() method will be triggered from the controller file "HelloController.java"
    the method will take the value that we typed inside the text field of id "txtCourse"
    and print it (show it) inside the label of id "lblCourse"
    -->
    <Button text="Course" onAction="#OnCourseButtonClick"/>
</VBox>
